# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import flights_pb2 as flights__pb2


class FlightsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getFlights = channel.unary_stream(
                '/flights.Flights/getFlights',
                request_serializer=flights__pb2.userflightrequest.SerializeToString,
                response_deserializer=flights__pb2.FlightResponse.FromString,
                )
        self.getDetails = channel.unary_stream(
                '/flights.Flights/getDetails',
                request_serializer=flights__pb2.userdetailrequest.SerializeToString,
                response_deserializer=flights__pb2.DetailResponse.FromString,
                )
        self.getSeats = channel.unary_stream(
                '/flights.Flights/getSeats',
                request_serializer=flights__pb2.userseatrequest.SerializeToString,
                response_deserializer=flights__pb2.SeatResponse.FromString,
                )
        self.getFlightsTickets = channel.unary_stream(
                '/flights.Flights/getFlightsTickets',
                request_serializer=flights__pb2.passengerflightrequest.SerializeToString,
                response_deserializer=flights__pb2.FlightTicketResponse.FromString,
                )
        self.setFlights = channel.unary_unary(
                '/flights.Flights/setFlights',
                request_serializer=flights__pb2.flightcreate.SerializeToString,
                response_deserializer=flights__pb2.flightcreateresponse.FromString,
                )
        self.setSeat = channel.unary_unary(
                '/flights.Flights/setSeat',
                request_serializer=flights__pb2.seatcreate.SerializeToString,
                response_deserializer=flights__pb2.seatcreateresponse.FromString,
                )
        self.setDetails = channel.unary_unary(
                '/flights.Flights/setDetails',
                request_serializer=flights__pb2.detailcreate.SerializeToString,
                response_deserializer=flights__pb2.detailcreateresponse.FromString,
                )


class FlightsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getFlights(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getDetails(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getSeats(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getFlightsTickets(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setFlights(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setSeat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setDetails(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FlightsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getFlights': grpc.unary_stream_rpc_method_handler(
                    servicer.getFlights,
                    request_deserializer=flights__pb2.userflightrequest.FromString,
                    response_serializer=flights__pb2.FlightResponse.SerializeToString,
            ),
            'getDetails': grpc.unary_stream_rpc_method_handler(
                    servicer.getDetails,
                    request_deserializer=flights__pb2.userdetailrequest.FromString,
                    response_serializer=flights__pb2.DetailResponse.SerializeToString,
            ),
            'getSeats': grpc.unary_stream_rpc_method_handler(
                    servicer.getSeats,
                    request_deserializer=flights__pb2.userseatrequest.FromString,
                    response_serializer=flights__pb2.SeatResponse.SerializeToString,
            ),
            'getFlightsTickets': grpc.unary_stream_rpc_method_handler(
                    servicer.getFlightsTickets,
                    request_deserializer=flights__pb2.passengerflightrequest.FromString,
                    response_serializer=flights__pb2.FlightTicketResponse.SerializeToString,
            ),
            'setFlights': grpc.unary_unary_rpc_method_handler(
                    servicer.setFlights,
                    request_deserializer=flights__pb2.flightcreate.FromString,
                    response_serializer=flights__pb2.flightcreateresponse.SerializeToString,
            ),
            'setSeat': grpc.unary_unary_rpc_method_handler(
                    servicer.setSeat,
                    request_deserializer=flights__pb2.seatcreate.FromString,
                    response_serializer=flights__pb2.seatcreateresponse.SerializeToString,
            ),
            'setDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.setDetails,
                    request_deserializer=flights__pb2.detailcreate.FromString,
                    response_serializer=flights__pb2.detailcreateresponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flights.Flights', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Flights(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getFlights(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/flights.Flights/getFlights',
            flights__pb2.userflightrequest.SerializeToString,
            flights__pb2.FlightResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/flights.Flights/getDetails',
            flights__pb2.userdetailrequest.SerializeToString,
            flights__pb2.DetailResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getSeats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/flights.Flights/getSeats',
            flights__pb2.userseatrequest.SerializeToString,
            flights__pb2.SeatResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getFlightsTickets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/flights.Flights/getFlightsTickets',
            flights__pb2.passengerflightrequest.SerializeToString,
            flights__pb2.FlightTicketResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def setFlights(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flights.Flights/setFlights',
            flights__pb2.flightcreate.SerializeToString,
            flights__pb2.flightcreateresponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def setSeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flights.Flights/setSeat',
            flights__pb2.seatcreate.SerializeToString,
            flights__pb2.seatcreateresponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def setDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flights.Flights/setDetails',
            flights__pb2.detailcreate.SerializeToString,
            flights__pb2.detailcreateresponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
